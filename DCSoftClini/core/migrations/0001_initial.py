# Generated by Django 5.1.7 on 2025-04-01 17:19

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactoPaciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_contacto', models.CharField(choices=[('D', 'Dueño'), ('R', 'Responsable')], default='D', max_length=1)),
                ('nombre_primario', models.CharField(max_length=50, verbose_name='Primer nombre')),
                ('nombre_secundario', models.CharField(blank=True, max_length=50, verbose_name='Segundo nombre')),
                ('apellido_primario', models.CharField(max_length=50, verbose_name='Primer apellido')),
                ('apellido_secundario', models.CharField(blank=True, max_length=50, verbose_name='Segundo apellido')),
                ('nombres', models.CharField(blank=True, max_length=200, verbose_name='Nombres')),
                ('docum_identidad', models.CharField(max_length=20, verbose_name='Documento de identidad')),
                ('direccion', models.CharField(max_length=100, verbose_name='Dirección')),
                ('email', models.CharField(blank=True, max_length=100, verbose_name='Email')),
                ('telef_fijo', models.CharField(blank=True, max_length=20, verbose_name='Telef. Fijo')),
                ('telef_movil', models.CharField(blank=True, max_length=20, verbose_name='Movil')),
            ],
        ),
        migrations.CreateModel(
            name='EmpresaCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Razon social')),
                ('ruc', models.CharField(max_length=11, verbose_name='RUC')),
                ('telefono', models.CharField(max_length=100, verbose_name='Telefono')),
                ('email', models.CharField(max_length=100, verbose_name='Email')),
                ('direccion', models.CharField(max_length=100, verbose_name='Dirección')),
                ('logo', models.ImageField(blank=True, default=None, null=True, upload_to='projects')),
            ],
        ),
        migrations.CreateModel(
            name='Especie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Especie')),
            ],
        ),
        migrations.CreateModel(
            name='MedicoVeterinario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombre del veterinario')),
                ('numero_colegiatura', models.CharField(max_length=20, verbose_name='Número de colegiatura')),
                ('direccion', models.CharField(max_length=100, verbose_name='Dirección')),
                ('email', models.CharField(max_length=100, verbose_name='EMAIL')),
                ('telefono', models.CharField(max_length=100, verbose_name='Teléfonos')),
            ],
        ),
        migrations.CreateModel(
            name='Menulist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menusubcode', models.IntegerField(default=0)),
                ('submenuname', models.CharField(max_length=100)),
                ('menulink', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Detalle lista Menu',
                'verbose_name_plural': 'Detalles listas Menu',
                'ordering': ['menusubcode'],
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simbolo', models.CharField(max_length=10, verbose_name='Simbolo')),
                ('nombre', models.CharField(max_length=100, verbose_name='Moneda')),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.TextField(verbose_name='Nota')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha Fin')),
                ('hora_notificacion', models.TimeField(verbose_name='Hora de Notificación')),
            ],
        ),
        migrations.CreateModel(
            name='Tipodocid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docid', models.CharField(max_length=1, verbose_name='Tipo documento de identidad')),
                ('desdocid', models.CharField(max_length=50, verbose_name='Descripción documento de identidad')),
            ],
        ),
        migrations.CreateModel(
            name='Menumain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menucode', models.IntegerField()),
                ('menuname', models.CharField(max_length=100)),
                ('menulist', models.ManyToManyField(blank=True, related_name='get_Menumain', to='core.menulist', verbose_name='Sub menú')),
            ],
            options={
                'verbose_name': 'Lista Menu',
                'verbose_name_plural': 'Lista Menu',
                'ordering': ['menucode'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, verbose_name='Nombre')),
                ('sexo', models.CharField(choices=[('M', 'Macho'), ('H', 'Hembra')], default='M', max_length=1)),
                ('nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('color', models.CharField(blank=True, default='', max_length=50, verbose_name='color / tipo de pelaje')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=13, verbose_name='Total peso sku en KG')),
                ('chip', models.CharField(blank=True, default='', max_length=50, verbose_name='Chip #')),
                ('imagen', models.ImageField(blank=True, default=None, null=True, upload_to='projects')),
                ('contactopaciente', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='paciente', to='core.contactopaciente', verbose_name='Contacto')),
            ],
            options={
                'ordering': ['nombre', 'contactopaciente__nombres'],
            },
        ),
        migrations.CreateModel(
            name='HistoriaClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nro_hiscli', models.CharField(blank=True, max_length=10, null=True, verbose_name='Nro. Historia Clinica')),
                ('fecha', models.DateField(default=datetime.date.today)),
                ('anamnesis', models.TextField(verbose_name='Anamnesis')),
                ('antecedentes_medicos', models.TextField(blank=True, null=True, verbose_name='Antecedentes medicos')),
                ('vacunas_aplicadas', models.TextField(blank=True, null=True, verbose_name='Vacunas aplicadas')),
                ('desparasitaciones', models.TextField(blank=True, null=True, verbose_name='Desparasitaciones')),
                ('medicamentos_actuales', models.TextField(blank=True, null=True, verbose_name='Medicamentos actuales')),
                ('paciente', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='historia', to='core.paciente', verbose_name='Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=datetime.date.today)),
                ('motivo', models.TextField()),
                ('examen_fisico', models.TextField()),
                ('diagnostico', models.TextField()),
                ('tratamiento', models.TextField()),
                ('notas_adicionales', models.TextField(blank=True, null=True)),
                ('medicoveterinario', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.medicoveterinario', verbose_name='Medico veterinario Dr')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultas', to='core.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Raza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, verbose_name='Raza')),
                ('especie', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='core.especie', verbose_name='Especie')),
            ],
        ),
        migrations.AddField(
            model_name='paciente',
            name='raza',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.raza', verbose_name='Raza'),
        ),
        migrations.CreateModel(
            name='RecetaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmaco', models.CharField(max_length=100, verbose_name='Farmaco')),
                ('cantidad', models.CharField(max_length=100, verbose_name='Cantidad')),
                ('dosis', models.CharField(max_length=100, verbose_name='Dosis')),
                ('consultamedica', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.consultamedica', verbose_name='Consulta Medica')),
            ],
        ),
        migrations.CreateModel(
            name='Servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=datetime.date.today, verbose_name='Fecha del servicio')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas adicionales')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios', to='core.paciente', verbose_name='Paciente')),
            ],
        ),
        migrations.AddField(
            model_name='contactopaciente',
            name='tipodocid',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, to='core.tipodocid', verbose_name='Tipo documento de identidad'),
        ),
        migrations.CreateModel(
            name='CitasProgramadas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_primario', models.CharField(max_length=50, verbose_name='Primer nombre')),
                ('nombre_secundario', models.CharField(blank=True, max_length=50, verbose_name='Segundo nombre')),
                ('apellido_primario', models.CharField(max_length=50, verbose_name='Primer apellido')),
                ('apellido_secundario', models.CharField(blank=True, max_length=50, verbose_name='Segundo apellido')),
                ('docum_identidad', models.CharField(max_length=20, verbose_name='Documento de identidad')),
                ('telef_fijo', models.CharField(blank=True, max_length=20, verbose_name='Teléfono Fijo')),
                ('telef_movil', models.CharField(blank=True, max_length=20, verbose_name='Teléfono Móvil')),
                ('fecha_cita', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de la Cita')),
                ('hora_cita', models.TimeField(verbose_name='Hora de la Cita')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas adicionales')),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.paciente', verbose_name='Paciente registrado')),
                ('tipodocid', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='core.tipodocid', verbose_name='Tipo documento de identidad')),
            ],
        ),
        migrations.CreateModel(
            name='TipoServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(choices=[('C', 'Clinico'), ('S', 'Servicios complementarios')], default='C', max_length=1)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del servicio')),
                ('precio', models.DecimalField(decimal_places=2, default=0, max_digits=13, verbose_name='Precio del servicio')),
                ('moneda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.moneda', verbose_name='Moneda')),
            ],
        ),
        migrations.CreateModel(
            name='ServiciosDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_detalle', to='core.servicios', verbose_name='Servicio')),
                ('tipo_servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tiposervicio', verbose_name='Tipo de servicio')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='paciente',
            unique_together={('nombre', 'contactopaciente')},
        ),
    ]
